name: CI/CD Build, Push, Deploy

on:
  push:
    branches:
      - main

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Set lowercase username
        id: lowername
        run: echo "username_lc=${GITHUB_ACTOR,,}" >> $GITHUB_OUTPUT

      - name: Build and push image (dual tag)
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: |
            ghcr.io/${{ steps.lowername.outputs.username_lc }}/mlflow:latest
            ghcr.io/${{ steps.lowername.outputs.username_lc }}/mlflow-trainer:latest

      - name: Set up Kind
        uses: engineerd/setup-kind@v0.5.0
        with:
          version: v0.20.0

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.29.0'

      - name: Apply K8s manifests
        run: |
          sed -i "s|YOUR_GITHUB_USERNAME|${{ steps.lowername.outputs.username_lc }}|g" k8s/*.yaml
          kubectl apply -f k8s/mlflow-deployment.yaml
          kubectl apply -f k8s/mlflow-service.yaml

      - name: Debug - List pods
        run: kubectl get pods -o wide

      - name: Debug - Describe MLflow pod
        run: |
          POD=$(kubectl get pods -l app=mlflow -o jsonpath='{.items[0].metadata.name}' || echo "")
          if [ -n "$POD" ]; then
            kubectl describe pod "$POD"
            kubectl logs "$POD" || true
          else
            echo "No mlflow pod found"
          fi

      - name: Wait for MLflow readiness
        run: kubectl rollout status deployment/mlflow --timeout=300s

      - name: Apply Trainer Job
        run: kubectl apply -f k8s/trainer-job.yaml

      - name: Wait for trainer job completion
        run: kubectl wait --for=condition=complete --timeout=600s job/trainer-job

      - name: Debug - Trainer pod logs
        run: |
          POD=$(kubectl get pods --selector=job-name=trainer-job -o jsonpath='{.items[0].metadata.name}' || echo "")
          if [ -n "$POD" ]; then
            kubectl logs "$POD" || true
          else
            echo "No trainer pod found"
          fi
